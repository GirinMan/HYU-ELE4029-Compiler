Terminals unused in grammar

    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier id SEMI
    7                | type_specifier id LBRACE num RBRACE SEMI

    8 type_specifier: INT
    9               | VOID

   10 fun_declaration: type_specifier id LPAREN params RPAREN compound_stmt

   11 params: param_list
   12       | VOID

   13 param_list: param_list COMMA param
   14           | param

   15 param: type_specifier id
   16      | type_specifier id LBRACE RBRACE

   17 compound_stmt: LCURLY local_declarations statement_list RCURLY

   18 local_declarations: local_declarations var_declaration
   19                   | %empty

   20 statement_list: statement_list statement
   21               | %empty

   22 statement: open_statement
   23          | closed_statement

   24 open_statement: IF LPAREN expression RPAREN statement
   25               | IF LPAREN expression RPAREN closed_statement ELSE open_statement
   26               | WHILE LPAREN expression RPAREN open_statement

   27 closed_statement: simple_statement
   28                 | IF LPAREN expression RPAREN closed_statement ELSE closed_statement
   29                 | WHILE LPAREN expression RPAREN closed_statement

   30 simple_statement: expression_stmt
   31                 | compound_stmt
   32                 | return_stmt

   33 expression_stmt: expression SEMI
   34                | SEMI

   35 return_stmt: RETURN SEMI
   36            | RETURN expression SEMI

   37 expression: var ASSIGN expression
   38           | simple_expression

   39 var: id
   40    | id LBRACE expression RBRACE

   41 simple_expression: additive_expression relop additive_expression
   42                  | additive_expression

   43 relop: LE
   44      | LT
   45      | GT
   46      | GE
   47      | EQ
   48      | NE

   49 additive_expression: additive_expression addop term
   50                    | term

   51 addop: PLUS
   52      | MINUS

   53 term: term mulop factor
   54     | factor

   55 mulop: TIMES
   56      | OVER

   57 factor: LPAREN expression RPAREN
   58       | var
   59       | call
   60       | num

   61 call: id LPAREN args RPAREN

   62 args: arg_list
   63     | %empty

   64 arg_list: arg_list COMMA expression
   65         | expression

   66 id: ID

   67 num: NUM


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 24 25 28
    ELSE (259) 25 28
    WHILE (260) 26 29
    RETURN (261) 35 36
    INT (262) 8
    VOID (263) 9 12
    ID (264) 66
    NUM (265) 67
    ASSIGN (266) 37
    EQ (267) 47
    NE (268) 48
    LT (269) 44
    LE (270) 43
    GT (271) 45
    GE (272) 46
    PLUS (273) 51
    MINUS (274) 52
    TIMES (275) 55
    OVER (276) 56
    LPAREN (277) 10 24 25 26 28 29 57 61
    RPAREN (278) 10 24 25 26 28 29 57 61
    LBRACE (279) 7 16 40
    RBRACE (280) 7 16 40
    LCURLY (281) 17
    RCURLY (282) 17
    SEMI (283) 6 7 33 34 35 36
    COMMA (284) 13 64
    ERROR (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1
        on right: 0
    declaration_list (33)
        on left: 2 3
        on right: 1 2
    declaration (34)
        on left: 4 5
        on right: 2 3
    var_declaration (35)
        on left: 6 7
        on right: 4 18
    type_specifier (36)
        on left: 8 9
        on right: 6 7 10 15 16
    fun_declaration (37)
        on left: 10
        on right: 5
    params (38)
        on left: 11 12
        on right: 10
    param_list (39)
        on left: 13 14
        on right: 11 13
    param (40)
        on left: 15 16
        on right: 13 14
    compound_stmt (41)
        on left: 17
        on right: 10 31
    local_declarations (42)
        on left: 18 19
        on right: 17 18
    statement_list (43)
        on left: 20 21
        on right: 17 20
    statement (44)
        on left: 22 23
        on right: 20 24
    open_statement (45)
        on left: 24 25 26
        on right: 22 25 26
    closed_statement (46)
        on left: 27 28 29
        on right: 23 25 28 29
    simple_statement (47)
        on left: 30 31 32
        on right: 27
    expression_stmt (48)
        on left: 33 34
        on right: 30
    return_stmt (49)
        on left: 35 36
        on right: 32
    expression (50)
        on left: 37 38
        on right: 24 25 26 28 29 33 36 37 40 57 64 65
    var (51)
        on left: 39 40
        on right: 37 58
    simple_expression (52)
        on left: 41 42
        on right: 38
    relop (53)
        on left: 43 44 45 46 47 48
        on right: 41
    additive_expression (54)
        on left: 49 50
        on right: 41 42 49
    addop (55)
        on left: 51 52
        on right: 49
    term (56)
        on left: 53 54
        on right: 49 50 53
    mulop (57)
        on left: 55 56
        on right: 53
    factor (58)
        on left: 57 58 59 60
        on right: 53 54
    call (59)
        on left: 61
        on right: 59
    args (60)
        on left: 62 63
        on right: 61
    arg_list (61)
        on left: 64 65
        on right: 62 64
    id (62)
        on left: 66
        on right: 6 7 10 15 16 39 40 61
    num (63)
        on left: 67
        on right: 7 60


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LBRACE num RBRACE SEMI
   10 fun_declaration: type_specifier . id LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11

    id  go to state 12


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

   66 id: ID .

    $default  reduce using rule 66 (id)


State 12

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LBRACE num RBRACE SEMI
   10 fun_declaration: type_specifier id . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 13
    LBRACE  shift, and go to state 14
    SEMI    shift, and go to state 15


State 13

   10 fun_declaration: type_specifier id LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    type_specifier  go to state 17
    params          go to state 18
    param_list      go to state 19
    param           go to state 20


State 14

    7 var_declaration: type_specifier id LBRACE . num RBRACE SEMI

    NUM  shift, and go to state 21

    num  go to state 22


State 15

    6 var_declaration: type_specifier id SEMI .

    $default  reduce using rule 6 (var_declaration)


State 16

    9 type_specifier: VOID .
   12 params: VOID .

    RPAREN    reduce using rule 12 (params)
    $default  reduce using rule 9 (type_specifier)


State 17

   15 param: type_specifier . id
   16      | type_specifier . id LBRACE RBRACE

    ID  shift, and go to state 11

    id  go to state 23


State 18

   10 fun_declaration: type_specifier id LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 24


State 19

   11 params: param_list .
   13 param_list: param_list . COMMA param

    COMMA  shift, and go to state 25

    $default  reduce using rule 11 (params)


State 20

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 21

   67 num: NUM .

    $default  reduce using rule 67 (num)


State 22

    7 var_declaration: type_specifier id LBRACE num . RBRACE SEMI

    RBRACE  shift, and go to state 26


State 23

   15 param: type_specifier id .
   16      | type_specifier id . LBRACE RBRACE

    LBRACE  shift, and go to state 27

    $default  reduce using rule 15 (param)


State 24

   10 fun_declaration: type_specifier id LPAREN params RPAREN . compound_stmt

    LCURLY  shift, and go to state 28

    compound_stmt  go to state 29


State 25

   13 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 17
    param           go to state 30


State 26

    7 var_declaration: type_specifier id LBRACE num RBRACE . SEMI

    SEMI  shift, and go to state 31


State 27

   16 param: type_specifier id LBRACE . RBRACE

    RBRACE  shift, and go to state 32


State 28

   17 compound_stmt: LCURLY . local_declarations statement_list RCURLY

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 33


State 29

   10 fun_declaration: type_specifier id LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 10 (fun_declaration)


State 30

   13 param_list: param_list COMMA param .

    $default  reduce using rule 13 (param_list)


State 31

    7 var_declaration: type_specifier id LBRACE num RBRACE SEMI .

    $default  reduce using rule 7 (var_declaration)


State 32

   16 param: type_specifier id LBRACE RBRACE .

    $default  reduce using rule 16 (param)


State 33

   17 compound_stmt: LCURLY local_declarations . statement_list RCURLY
   18 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 34
    type_specifier   go to state 35
    statement_list   go to state 36


State 34

   18 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 18 (local_declarations)


State 35

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LBRACE num RBRACE SEMI

    ID  shift, and go to state 11

    id  go to state 37


State 36

   17 compound_stmt: LCURLY local_declarations statement_list . RCURLY
   20 statement_list: statement_list . statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 28
    RCURLY  shift, and go to state 42
    SEMI    shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 45
    open_statement       go to state 46
    closed_statement     go to state 47
    simple_statement     go to state 48
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 37

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LBRACE num RBRACE SEMI

    LBRACE  shift, and go to state 14
    SEMI    shift, and go to state 15


State 38

   24 open_statement: IF . LPAREN expression RPAREN statement
   25               | IF . LPAREN expression RPAREN closed_statement ELSE open_statement
   28 closed_statement: IF . LPAREN expression RPAREN closed_statement ELSE closed_statement

    LPAREN  shift, and go to state 60


State 39

   26 open_statement: WHILE . LPAREN expression RPAREN open_statement
   29 closed_statement: WHILE . LPAREN expression RPAREN closed_statement

    LPAREN  shift, and go to state 61


State 40

   35 return_stmt: RETURN . SEMI
   36            | RETURN . expression SEMI

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41
    SEMI    shift, and go to state 62

    expression           go to state 63
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 41

   57 factor: LPAREN . expression RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    expression           go to state 64
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 42

   17 compound_stmt: LCURLY local_declarations statement_list RCURLY .

    $default  reduce using rule 17 (compound_stmt)


State 43

   34 expression_stmt: SEMI .

    $default  reduce using rule 34 (expression_stmt)


State 44

   31 simple_statement: compound_stmt .

    $default  reduce using rule 31 (simple_statement)


State 45

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 46

   22 statement: open_statement .

    $default  reduce using rule 22 (statement)


State 47

   23 statement: closed_statement .

    $default  reduce using rule 23 (statement)


State 48

   27 closed_statement: simple_statement .

    $default  reduce using rule 27 (closed_statement)


State 49

   30 simple_statement: expression_stmt .

    $default  reduce using rule 30 (simple_statement)


State 50

   32 simple_statement: return_stmt .

    $default  reduce using rule 32 (simple_statement)


State 51

   33 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 65


State 52

   37 expression: var . ASSIGN expression
   58 factor: var .

    ASSIGN  shift, and go to state 66

    $default  reduce using rule 58 (factor)


State 53

   38 expression: simple_expression .

    $default  reduce using rule 38 (expression)


State 54

   41 simple_expression: additive_expression . relop additive_expression
   42                  | additive_expression .
   49 additive_expression: additive_expression . addop term

    EQ     shift, and go to state 67
    NE     shift, and go to state 68
    LT     shift, and go to state 69
    LE     shift, and go to state 70
    GT     shift, and go to state 71
    GE     shift, and go to state 72
    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 42 (simple_expression)

    relop  go to state 75
    addop  go to state 76


State 55

   50 additive_expression: term .
   53 term: term . mulop factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 79


State 56

   54 term: factor .

    $default  reduce using rule 54 (term)


State 57

   59 factor: call .

    $default  reduce using rule 59 (factor)


State 58

   39 var: id .
   40    | id . LBRACE expression RBRACE
   61 call: id . LPAREN args RPAREN

    LPAREN  shift, and go to state 80
    LBRACE  shift, and go to state 81

    $default  reduce using rule 39 (var)


State 59

   60 factor: num .

    $default  reduce using rule 60 (factor)


State 60

   24 open_statement: IF LPAREN . expression RPAREN statement
   25               | IF LPAREN . expression RPAREN closed_statement ELSE open_statement
   28 closed_statement: IF LPAREN . expression RPAREN closed_statement ELSE closed_statement

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    expression           go to state 82
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 61

   26 open_statement: WHILE LPAREN . expression RPAREN open_statement
   29 closed_statement: WHILE LPAREN . expression RPAREN closed_statement

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    expression           go to state 83
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 62

   35 return_stmt: RETURN SEMI .

    $default  reduce using rule 35 (return_stmt)


State 63

   36 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 84


State 64

   57 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 85


State 65

   33 expression_stmt: expression SEMI .

    $default  reduce using rule 33 (expression_stmt)


State 66

   37 expression: var ASSIGN . expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    expression           go to state 86
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 67

   47 relop: EQ .

    $default  reduce using rule 47 (relop)


State 68

   48 relop: NE .

    $default  reduce using rule 48 (relop)


State 69

   44 relop: LT .

    $default  reduce using rule 44 (relop)


State 70

   43 relop: LE .

    $default  reduce using rule 43 (relop)


State 71

   45 relop: GT .

    $default  reduce using rule 45 (relop)


State 72

   46 relop: GE .

    $default  reduce using rule 46 (relop)


State 73

   51 addop: PLUS .

    $default  reduce using rule 51 (addop)


State 74

   52 addop: MINUS .

    $default  reduce using rule 52 (addop)


State 75

   41 simple_expression: additive_expression relop . additive_expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    var                  go to state 87
    additive_expression  go to state 88
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 76

   49 additive_expression: additive_expression addop . term

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    var     go to state 87
    term    go to state 89
    factor  go to state 56
    call    go to state 57
    id      go to state 58
    num     go to state 59


State 77

   55 mulop: TIMES .

    $default  reduce using rule 55 (mulop)


State 78

   56 mulop: OVER .

    $default  reduce using rule 56 (mulop)


State 79

   53 term: term mulop . factor

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    var     go to state 87
    factor  go to state 90
    call    go to state 57
    id      go to state 58
    num     go to state 59


State 80

   61 call: id LPAREN . args RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    $default  reduce using rule 63 (args)

    expression           go to state 91
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    args                 go to state 92
    arg_list             go to state 93
    id                   go to state 58
    num                  go to state 59


State 81

   40 var: id LBRACE . expression RBRACE

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    expression           go to state 94
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 82

   24 open_statement: IF LPAREN expression . RPAREN statement
   25               | IF LPAREN expression . RPAREN closed_statement ELSE open_statement
   28 closed_statement: IF LPAREN expression . RPAREN closed_statement ELSE closed_statement

    RPAREN  shift, and go to state 95


State 83

   26 open_statement: WHILE LPAREN expression . RPAREN open_statement
   29 closed_statement: WHILE LPAREN expression . RPAREN closed_statement

    RPAREN  shift, and go to state 96


State 84

   36 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 36 (return_stmt)


State 85

   57 factor: LPAREN expression RPAREN .

    $default  reduce using rule 57 (factor)


State 86

   37 expression: var ASSIGN expression .

    $default  reduce using rule 37 (expression)


State 87

   58 factor: var .

    $default  reduce using rule 58 (factor)


State 88

   41 simple_expression: additive_expression relop additive_expression .
   49 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 41 (simple_expression)

    addop  go to state 76


State 89

   49 additive_expression: additive_expression addop term .
   53 term: term . mulop factor

    TIMES  shift, and go to state 77
    OVER   shift, and go to state 78

    $default  reduce using rule 49 (additive_expression)

    mulop  go to state 79


State 90

   53 term: term mulop factor .

    $default  reduce using rule 53 (term)


State 91

   65 arg_list: expression .

    $default  reduce using rule 65 (arg_list)


State 92

   61 call: id LPAREN args . RPAREN

    RPAREN  shift, and go to state 97


State 93

   62 args: arg_list .
   64 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 98

    $default  reduce using rule 62 (args)


State 94

   40 var: id LBRACE expression . RBRACE

    RBRACE  shift, and go to state 99


State 95

   24 open_statement: IF LPAREN expression RPAREN . statement
   25               | IF LPAREN expression RPAREN . closed_statement ELSE open_statement
   28 closed_statement: IF LPAREN expression RPAREN . closed_statement ELSE closed_statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 28
    SEMI    shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 100
    open_statement       go to state 46
    closed_statement     go to state 101
    simple_statement     go to state 48
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 96

   26 open_statement: WHILE LPAREN expression RPAREN . open_statement
   29 closed_statement: WHILE LPAREN expression RPAREN . closed_statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 28
    SEMI    shift, and go to state 43

    compound_stmt        go to state 44
    open_statement       go to state 102
    closed_statement     go to state 103
    simple_statement     go to state 48
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 97

   61 call: id LPAREN args RPAREN .

    $default  reduce using rule 61 (call)


State 98

   64 arg_list: arg_list COMMA . expression

    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41

    expression           go to state 104
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 99

   40 var: id LBRACE expression RBRACE .

    $default  reduce using rule 40 (var)


State 100

   24 open_statement: IF LPAREN expression RPAREN statement .

    $default  reduce using rule 24 (open_statement)


State 101

   23 statement: closed_statement .
   25 open_statement: IF LPAREN expression RPAREN closed_statement . ELSE open_statement
   28 closed_statement: IF LPAREN expression RPAREN closed_statement . ELSE closed_statement

    ELSE  shift, and go to state 105

    $default  reduce using rule 23 (statement)


State 102

   26 open_statement: WHILE LPAREN expression RPAREN open_statement .

    $default  reduce using rule 26 (open_statement)


State 103

   29 closed_statement: WHILE LPAREN expression RPAREN closed_statement .

    $default  reduce using rule 29 (closed_statement)


State 104

   64 arg_list: arg_list COMMA expression .

    $default  reduce using rule 64 (arg_list)


State 105

   25 open_statement: IF LPAREN expression RPAREN closed_statement ELSE . open_statement
   28 closed_statement: IF LPAREN expression RPAREN closed_statement ELSE . closed_statement

    IF      shift, and go to state 38
    WHILE   shift, and go to state 39
    RETURN  shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    LPAREN  shift, and go to state 41
    LCURLY  shift, and go to state 28
    SEMI    shift, and go to state 43

    compound_stmt        go to state 44
    open_statement       go to state 106
    closed_statement     go to state 107
    simple_statement     go to state 48
    expression_stmt      go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    id                   go to state 58
    num                  go to state 59


State 106

   25 open_statement: IF LPAREN expression RPAREN closed_statement ELSE open_statement .

    $default  reduce using rule 25 (open_statement)


State 107

   28 closed_statement: IF LPAREN expression RPAREN closed_statement ELSE closed_statement .

    $default  reduce using rule 28 (closed_statement)
